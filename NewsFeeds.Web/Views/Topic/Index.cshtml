@{ 
    ViewBag.Title = "Topics";
}
@model List<NewsFeeds.Entities.Topic.ViewModels.UserTopicViewModel>

<div>
    <h2>Discover Topics</h2>
    <hr />
    @if (Model.Count == 0)
    {
        <p>No topics to subscribe</p>
    }

    @if (Model.Count > 0)
    {
        <div class="container-fluid">
            <div class="row">
                @foreach (var topic in Model)
                {
                    if (!topic.IsSubscribed)
                    {
                        @Topic.SingleTopic(topic, @Url)
                    }
                }
            </div>
        </div>
    }

</div>

<div>
    <h2>Following</h2>
    <hr />
    @if (Model.Count == 0)
    {
        <p>Come on, subscribe to a topic!</p>
    }

    @if (Model.Count > 0)
    {
        <div class="container-fluid">
            <div class="row">
                @foreach (var topic in Model)
                {
                    if (topic.IsSubscribed)
                    {
                        @Topic.SingleTopic(topic, @Url)
                    }
                }
            </div>
        </div>
    }
</div>

@section scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            bindEvents();
        });

        function bindEvents() {
            $('.btn[data-is-subscribed="true"]').click(function (event) {
                event.preventDefault();
                var topicName = $(event.currentTarget).data('topic-name');
                unsubscribe(topicName)
                    .then(function () {
                        console.log("success")
                    })
                    .catch(function () {
                        console.log("failure")
                    })
          
            });

            $('.btn[data-is-subscribed="false"').click(function (event) {
                event.preventDefault();
                var topicName = $(event.currentTarget).data('topic-name');
                subscribe(topicName)
                    .then(function () {
                        console.log("success")
                    })
                    .catch(function () {
                        console.log("failure")
                    });
            });
        }

        function subscribe(topicName) {
            if (typeof topicName !== 'string') {
                return Promise.reject('Bad parameters');
            }

            return new Promise(function (resolve, reject) {
                $.ajax({
                    method: 'POST',
                    url: '@Url.Action("Index", "Topic")/' + topicName + '/subscription',
                    success: resolve,
                    error: reject
                })
            });
        }

        function unsubscribe(topicName) {
            if (typeof topicName !== 'string') {
                return Promise.reject('Bad parameters');
            }

            return new Promise(function (resolve, reject) {
                $.ajax({
                    method: 'DELETE',
                    url: '@Url.Action("Index", "Topic")/' + topicName + '/subscription',
                    success: resolve,
                    error: reject
                })
            });
        }
    </script>
}
